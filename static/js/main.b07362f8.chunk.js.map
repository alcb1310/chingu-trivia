{"version":3,"sources":["navigation_bar.js","question_card.js","App.js","index.js"],"names":["NavigationBar","react_default","a","createElement","Navbar","bg","expand","Container","NavbarBrand","className","href","QuestionCard","props","question","choices","questionNumber","chooseAnswer","nextQuestion","totalQuestions","enableSubmit","endOfGame","restart","correctAnswer","_useState","useState","_useState2","Object","slicedToArray","selectedAnswer","setSelectedAnswer","answerEl","map","answer","idx","Col","md","sm","key","Button","variant","size","onClick","disabled","cardTitle","concat","cardBody","Fragment","Row","cardFooter","Card","Footer","Header","Body","onlyUnique","value","index","self","indexOf","App","questionsTopic","setQuestionsTopic","_useState3","_useState4","selectedTopic","setSelectedTopic","_useState5","_useState6","selectedQuestions","setSelectedQuestions","_useState7","_useState8","setQuestionNumber","_useState9","_useState10","endMessage","setEndMessage","_useState11","_useState12","setEnableSubmit","_useState13","_useState14","score","setScore","_useState15","_useState16","answers","setAnswers","_useState17","_useState18","data","setData","useEffect","axios","get","then","results","topic_array","topic","filter","my_answers","length","push","uniqueAnswers","optionsEl","topicSelection","offset","span","FormSelect","onChange","e","target","ques","questionCard","question_card","prev","whatToShow","navigation_bar","id","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b07362f8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Navbar, NavbarBrand, Container } from \"react-bootstrap\";\n\nfunction NavigationBar() {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <NavbarBrand className=\"ms-auto me-auto navbar-title\" href=\"#home\">Chingu Trivia</NavbarBrand>\n      </Container>\n    </Navbar>\n  );\n}\nexport default NavigationBar;\n","import React, { useState } from \"react\";\n\nimport { Card, Row, Col, Button, Container } from \"react-bootstrap\";\n\nfunction QuestionCard(props) {\n  const {\n    question,\n    choices,\n    questionNumber,\n    chooseAnswer,\n    nextQuestion,\n    totalQuestions,\n    enableSubmit,\n    endOfGame,\n    restart,\n    correctAnswer,\n  } = props;\n  const [selectedAnswer, setSelectedAnswer] = useState(\"\");\n\n  const answerEl = choices.map((answer, idx) => {\n    return (\n      <Col md={6} sm={12} className=\"d-grid gap-2 mt-2\" key={idx}>\n        <Button\n          variant={\n            selectedAnswer === \"\"\n              ? \"outline-primary\"\n              : selectedAnswer === correctAnswer && selectedAnswer === answer\n              ? \"success\"\n              : selectedAnswer === answer\n              ? \"danger\"\n              : correctAnswer === answer\n              ? \"outline-success\"\n              : \"outline-danger\"\n          }\n          size=\"lg\"\n          onClick={() => {\n            setSelectedAnswer(answer);\n            chooseAnswer(answer);\n          }}\n          disabled={enableSubmit}\n        >\n          {answer}\n        </Button>\n      </Col>\n    );\n  });\n\n  const cardTitle =\n    endOfGame === \"\"\n      ? `Question ${questionNumber}/${totalQuestions}`\n      : endOfGame;\n\n  const cardBody =\n    endOfGame === \"\" ? (\n      <>\n        <p>{question}</p>\n        <Row>{answerEl}</Row>\n      </>\n    ) : (\n      <Row>\n        <Col sm={12} className=\"d-grid gap-2 mt-2\">\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            onClick={restart}\n            disabled={!enableSubmit}\n          >\n            Play Again\n          </Button>\n        </Col>\n      </Row>\n    );\n\n  const cardFooter =\n    endOfGame === \"\" ? (\n      <Card.Footer>\n        <Row>\n          <Col sm={12} className=\"d-grid gap-2 mt-2\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={() => {\n                setSelectedAnswer(\"\")\n                nextQuestion()\n              }}\n              disabled={!enableSubmit}\n            >\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </Card.Footer>\n    ) : (\n      \"\"\n    );\n\n  return (\n    <Container className=\"p-3\">\n      <Card>\n        <Card.Header className=\"bg-success text-light p-3\">\n          {cardTitle}\n        </Card.Header>\n        <Card.Body>{cardBody}</Card.Body>\n        {cardFooter}\n      </Card>\n    </Container>\n  );\n}\n\nexport default QuestionCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FormSelect, Row, Col } from \"react-bootstrap\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport NavigationBar from \"./navigation_bar\";\nimport QuestionCard from \"./question_card\";\n\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction App() {\n  const [questionsTopic, setQuestionsTopic] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState(\"\");\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [questionNumber, setQuestionNumber] = useState(0);\n  const [endMessage, setEndMessage] = useState(\"\");\n  const [enableSubmit, setEnableSubmit] = useState(false);\n  const [score, setScore] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://johnmeade-webdev.github.io/chingu_quiz_api/trial.json\")\n      .then((results) => {\n        setData(results.data)\n        const topic_array = results.data.map((topic) => topic.topic);\n        setQuestionsTopic(topic_array.filter(onlyUnique));\n      });\n    setQuestionNumber(0);\n  }, []);\n\n  function chooseAnswer(answer) {\n    const correctAnswer =\n      selectedQuestions[questionNumber - 1].choices[\n        selectedQuestions[questionNumber - 1].answer\n      ];\n    if (correctAnswer === answer) {\n      setScore((prev) => prev + 1);\n    }\n    setEnableSubmit(true);\n  }\n\n  function restart() {\n    setSelectedTopic(\"\");\n    setSelectedQuestions([]);\n  }\n\n  function nextQuestion() {\n    const nextQuestionIndex = questionNumber;\n    if (nextQuestionIndex < selectedQuestions.length) {\n      setQuestionNumber((prev) => prev + 1);\n      setEnableSubmit(false);\n    } else {\n      setEndMessage(\n        `Game Over! Final Score ${score} / ${selectedQuestions.length}`\n      );\n    }\n  }\n\n  useEffect(() => {\n    setAnswers(() => {\n      const my_answers = [];\n\n      if (selectedQuestions.length > 0) {\n        for (const answer in selectedQuestions[questionNumber - 1].choices) {\n          my_answers.push(\n            selectedQuestions[questionNumber - 1].choices[answer]\n          );\n        }\n      }\n      return my_answers;\n    });\n  }, [questionNumber]);\n\n  const uniqueAnswers = answers.filter(onlyUnique);\n\n  const optionsEl = questionsTopic.map((question, idx) => (\n    <option key={idx} value={question}>\n      {question}\n    </option>\n  ));\n\n  function handleChange(e) {\n    const { value } = e.target;\n    setSelectedTopic(value);\n    setSelectedQuestions(data.filter((ques) => ques.topic === value));\n    setQuestionNumber(1);\n  }\n\n  const topicSelection = (\n    <Row className=\"m-1\">\n      <Col md={{ offset: 3, span: 6 }} sm={12}>\n        <FormSelect value={selectedTopic} onChange={handleChange}>\n          <option value=\"\">--- Select your topic ---</option>\n          {optionsEl}\n        </FormSelect>\n      </Col>\n    </Row>\n  );\n\n  const endOfGame = endMessage === \"\" ? \"\" : <p>{endMessage}</p>;\n\n  const questionCard = (\n    <QuestionCard\n      question={\n        selectedQuestions.length && questionNumber <= selectedQuestions.length\n          ? selectedQuestions[questionNumber - 1].question\n          : \"\"\n      }\n      choices={uniqueAnswers}\n      chooseAnswer={chooseAnswer}\n      questionNumber={questionNumber}\n      nextQuestion={nextQuestion}\n      totalQuestions={selectedQuestions.length}\n      enableSubmit={enableSubmit}\n      endOfGame={endOfGame}\n      restart={restart}\n      correctAnswer={\n        selectedQuestions.length && questionNumber <= selectedQuestions.length\n          ? selectedQuestions[questionNumber - 1].choices[\n              selectedQuestions[questionNumber - 1].answer\n            ]\n          : \"\"\n      }\n    />\n  );\n\n  const whatToShow =\n    selectedQuestions.length === 0 ? topicSelection : questionCard;\n\n  return (\n    <div className=\"App\">\n      <header className=\"AppHeader\">\n        <NavigationBar />\n      </header>\n      <section id=\"questions\">{whatToShow}</section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}